services:
  # CPU-only container (lightweight, ~500MB)
  drl-cpu:
    build:
      context: ..
      dockerfile: docker/Dockerfile.cpu
    image: drl-cpu:latest
    container_name: drl-cpu
    working_dir: /workspace
    tty: true
    stdin_open: true
    volumes:
      - ..:/workspace
      - drl-pip-cache:/root/.cache/pip
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - drl-network

  # NVIDIA CUDA container (requires nvidia-docker)
  drl-cuda:
    build:
      context: ..
      dockerfile: docker/Dockerfile.cuda
    image: drl-cuda:latest
    container_name: drl-cuda
    working_dir: /workspace
    tty: true
    stdin_open: true
    volumes:
      - ..:/workspace
      - drl-pip-cache:/root/.cache/pip
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - PYTHONUNBUFFERED=1
      - CUDA_LAUNCH_BLOCKING=0
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    networks:
      - drl-network

  # AMD ROCm container (requires ROCm drivers)
  drl-rocm:
    build:
      context: ..
      dockerfile: docker/Dockerfile.rocm
    image: drl-rocm:latest
    container_name: drl-rocm
    working_dir: /workspace
    tty: true
    stdin_open: true
    volumes:
      - ..:/workspace
      - drl-pip-cache:/root/.cache/pip
    environment:
      - HSA_OVERRIDE_GFX_VERSION=10.3.0
      - PYTHONUNBUFFERED=1
    devices:
      - /dev/kfd:/dev/kfd
      - /dev/dri:/dev/dri
    group_add:
      - video
      - render
    security_opt:
      - seccomp:unconfined
    networks:
      - drl-network

volumes:
  drl-pip-cache:
    driver: local

networks:
  drl-network:
    driver: bridge
